#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Dec 28 20:53:54 2020

@author: rajatdhawan
Machine Learning Basics Study
"""

# Loading Data
# Features and Labels
# Transform Data into numeric data/Make data dictionary
# Model Creation
# Test Train Data
# Run Predictions
# Check Accuracy and Model Fitness

#Methods : Supervised LearningClassification : K-Nearest Neighbor, SVMs


#Libraries
import pandas as pd
import numpy as np
from sklearn import datasets
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split


#Loading Data
iris=datasets.load_iris()

# Dividing data into Features & Labels
X=iris.data
y=iris.target
print(X.shape)
print(y.shape)

#Data Division into test and train data sets
X_Train, X_Test, y_Train, y_Test=train_test_split(X,y,test_size=0.2)

knn1=neighbors.KNeighborsClassifier(n_neighbors=3,weights='distance')
knn1.fit(X_Train,y_Train)
Predict1=knn1.predict(X_Test)

acc1=metrics.accuracy_score(y_Test,Predict1)
print('Accuracy:',acc1)

# KNN METHOD
from sklearn import neighbors,metrics
from sklearn.preprocessing import LabelEncoder

#Another Dataset Imported from local drive
DATA=pd.read_csv('car.data')
DATA.columns=['buying','maint','doors','person','lug_boot','safety','class']

# Transforming data into numeric data
X2=DATA[['buying','maint','safety']].values
y2=DATA[['class']]

#X2
le=LabelEncoder()
for i in range(len(X2[0])):
    X2[:,i]=le.fit_transform(X2[:,i])
X2=np.array(X2)
    
#y2
label_mapping={'unacc':0, 'acc':1, 'good':2, 'vgood':3}
y2['class']=y2['class'].map(label_mapping)

knn=neighbors.KNeighborsClassifier(n_neighbors=22,weights='uniform')

X2_Train, X2_Test, y2_Train, y2_Test=train_test_split(X2,y2,test_size=0.2)

knn.fit(X2_Train,y2_Train)

predictions=knn.predict(X2_Test)
 
acc=metrics.accuracy_score(y2_Test,predictions)

print('Accuracy',acc)
z=[np.array(y2_Test['class']),np.array(predictions)]




    